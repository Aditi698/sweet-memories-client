{"version":3,"sources":["components/Images/memories.png","actions/actionTypes.js","api/index.js","actions/auth.js","components/Navbar/Navbar.js","actions/posts.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Form/Form.js","components/Home/Home.js","components/Auth/Input.js","components/Auth/icon.js","components/Auth/Auth.js","App.js","reducers/index.js","reducers/posts.js","reducers/auth.js","index.js","Store/index.js"],"names":["FETCH_ALL","CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","AUTH","LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","signIn","formData","post","signUp","updatePost","id","updatedPost","deletepost","delete","likePost","googleLogin","result","type","data","signingInUser","signingUpUser","Navbar","props","useState","user","setUser","dispatch","useDispatch","history","useHistory","location","useLocation","logout","push","useEffect","decode","exp","Date","getTime","AppBar","className","position","color","to","src","memories","alt","Toolbar","Avatar","name","imageUrl","charAt","Typography","variant","Button","onClick","fetchall","creatingPost","updatingPost","deletingPost","likingPost","Post","setCurrentId","Likes","likes","length","find","like","googleId","_id","fontSize","Card","CardMedia","image","selectedFile","title","moment","createdAt","fromNow","creator","style","size","tags","map","tag","CardContent","gutterBottom","component","message","CardActions","disabled","api","console","log","Posts","posts","useSelector","state","Grid","container","alignItems","spacing","item","xs","sm","CircularProgress","Form","currentId","postData","setPostData","pst","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","align","Home","get","Grow","in","Container","justify","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","icon","width","height","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","isSignUp","setIsSignup","showPassword","setShowPassword","setFormData","googleSuccess","response","profileObj","tokenId","error","React","window","gapi","load","client","init","clientId","scope","pluginName","then","auth2","getAuthInstance","isSignedIn","maxWidth","signup","signin","prevShowPassword","render","renderProps","startIcon","onSuccess","onFailure","cookiePolicy","prevIsSignUp","App","path","exact","combineReducers","action","filter","auth","authData","setItem","stringify","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35bc4f65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.e3b31bf6.png\";","// POSTS\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const CREATE_POST = 'CREATE_POST';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const LIKE_POST = 'LIKE_POST';\n\n\nexport const AUTH = \"AUTH\";\nexport const LOGOUT = \"LOGOUT\";","import axios from \"axios\";\n\nconst API = axios.create({\n  baseURL: \"https://sweet-memories-node-v1.herokuapp.com\",\n});\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n\n  return req;\n});\n\nexport const signIn = (formData) => API.post(\"/user/signin\", formData);\nexport const signUp = (formData) => API.post(\"/user/signup\", formData);\n\nexport const fetchPosts = () => API.get(\"/posts/getposts\");\nexport const createPost = (newPost) => API.post(\"/posts/createpost\", newPost);\nexport const updatePost = (id, updatedPost) =>\n  API.post(`/posts/updatepost/${id}`, updatedPost);\nexport const deletepost = (id) => API.delete(`/posts/deletepost/${id}`);\nexport const likePost = (id) => API.post(`/posts/likepost/${id}`);\n","import {AUTH, LOGOUT} from './actionTypes';\nimport * as api from '../api';\n\n\nexport function googleLogin(result, token) {\n    return {\n        type: AUTH,\n        data: {result, token}\n    }\n}\n\nexport function logoutUser() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport const signin = (formData, history) => async (dispatch) => {\n    try {\n        const {data} = await api.signIn(formData);\n\n        dispatch(signingInUser(data));\n\n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function signingInUser(data) {\n    return {\n        type: AUTH,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const signup = (formData, history) => async (dispatch) => {\n    try {\n        const {data} = await api.signUp(formData);\n\n        dispatch(signingUpUser(data));\n\n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function signingUpUser(data) {\n    return {\n        type: AUTH,\n        data\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { AppBar, Avatar, Button, Toolbar, Typography } from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport \"./Navbar.css\";\n\nimport memories from \"../Images/memories.png\";\nimport { useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../actions/auth\";\n\nfunction Navbar(props) {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const logout = () => {\n    dispatch(logoutUser());\n    history.push(\"/\");\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  return (\n    <AppBar className=\"navbar\" position=\"static\" color=\"inherit\">\n      <div className=\"navbar__logocontainer\">\n        <Link to=\"/\">\n          <img className=\"navbar__appbarLogo\" src={memories} alt=\"memories\" />\n        </Link>\n      </div>\n      <Toolbar className=\"navbar__toolbar\">\n        {user ? (\n          <div className=\"navbar__toolbarProfile\">\n            <Avatar\n              className=\"navbar__avatar\"\n              alt={user.result.name}\n              src={user.result.imageUrl}\n            >\n              {user.result.name.charAt(0)}\n            </Avatar>\n            <Typography className=\"navbar__username\" variant=\"h6\">\n              {user.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className=\"navbar__logout\"\n              color=\"secondary\"\n              onClick={logout}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Link to=\"/auth\">\n            <Button\n              variant=\"contained\"\n              className=\"navbar__signin\"\n              color=\"primary\"\n            >\n              Sign in\n            </Button>\n          </Link>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Navbar;\n","import {FETCH_ALL, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST} from './actionTypes';\nimport * as api from '../api';\n\nexport const getPosts= () => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts(); // from reaponse we extract data\n        dispatch(fetchall(data));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function fetchall(data) {\n    return {\n        type: FETCH_ALL,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\nexport const createPost= (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post); // from reaponse we extract data\n        dispatch(creatingPost(data));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function creatingPost(data) {\n    return {\n        type: CREATE_POST,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        console.log(post);\n        const {data} = await api.updatePost(id, post);\n\n        dispatch(updatingPost(data))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport function updatingPost(data) {\n    return {\n        type: UPDATE_POST,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletepost(id);\n\n        dispatch(deletingPost(id))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function deletingPost(id) {\n    return {\n        type: DELETE_POST,\n        id\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const {data} = await api.likePost(id);\n\n        dispatch(likingPost(data))\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport function likingPost(data) {\n    return {\n        type: LIKE_POST,\n        data\n    }\n}","import React from \"react\";\nimport moment from \"moment\";\nimport \"./Post.css\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch } from \"react-redux\";\nimport { deletePost, likePost } from \"../../../actions/posts\";\n\nfunction Post({ post, setCurrentId }) {\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(\n        (like) => like === (user?.result?.googleId || user?.result?._id)\n      ) ? (\n        <>\n          {\" \"}\n          <ThumbUpAltIcon color=\"primary\" fontSize=\"small\" />\n          &nbsp;\n          {post.likes.length > 2\n            ? `You and ${post.likes.length - 1} others`\n            : `${post.likes.length} like${\n                post.likes.length > 1 ? \"s\" : \"\"\n              }`}{\" \"}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlinedIcon fontSize=\"small\" />\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      );\n    }\n    return (\n      <>\n        <ThumbUpAltOutlinedIcon fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  return (\n    <Card className=\"card\">\n      <CardMedia\n        className=\"card__media\"\n        image={post.selectedFile}\n        title={post.title}\n      />\n      <div className=\"card__overlay1\">\n        <Typography variant=\"h6\">{post.name}</Typography>\n        <Typography variant=\"body1\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      {(user?.result?.googleId === post?.creator ||\n        user?.result?._id === post?.creator) && (\n        <div className=\"card__overlay2\">\n          <Button\n            style={{ color: \"white\" }}\n            size=\"small\"\n            onClick={() => setCurrentId(post._id)}\n          >\n            <MoreHorizIcon fontSize=\"default\" />\n          </Button>\n        </div>\n      )}\n      <div className=\"card__details\">\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <CardContent>\n        <Typography className=\"card__message\" variant=\"h6\" gutterBottom>\n          {post.title}\n        </Typography>\n        <Typography\n          className=\"card__message\"\n          color=\"textSecondary\"\n          component=\"p\"\n          variant=\"body2\"\n          gutterBottom\n        >\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions className=\"card__Actions\">\n        <Button\n          size=\"small\"\n          disabled={!user?.result}\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <Likes />\n        </Button>\n\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button size=\"small\" onClick={() => dispatch(deletePost(post._id))}>\n            <DeleteIcon color=\"secondary\" fontSize=\"small\" />\n            &nbsp; Delete\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport \"./Posts.css\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport Post from \"./Post/Post\";\n\nfunction Posts({ setCurrentId }) {\n  const posts = useSelector((state) => state.posts);\n\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className=\"posts__container\"\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={6}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\nexport default Posts;\n","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Paper, Typography } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport \"./Form.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nfunction Form({ currentId, setCurrentId }) {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const dispatch = useDispatch();\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((pst) => pst._id === currentId) : null\n  );\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  useEffect(() => {\n    // populate form while updating\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(currentId);\n    if (currentId) {\n      dispatch(\n        updatePost(currentId, { ...postData, name: user?.result?.name })\n      ); // if we have id then we are updating post\n    } else {\n      dispatch(createPost({ ...postData, name: user?.result?.name })); // else we are creating post\n    }\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      // creator: '',\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className=\"form__paper\">\n        <Typography variant=\"h6\" align=\"center\">\n          Please login to create Memories!\n        </Typography>\n      </Paper>\n    );\n  }\n  return (\n    <Paper className=\"form__paper\">\n      <h4 className=\"form__heading\">\n        {currentId ? \"Editing\" : \"Creating\"} Memory\n      </h4>\n      <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <FileBase\n          type=\"file\"\n          multiple={false}\n          onDone={({ base64 }) =>\n            setPostData({ ...postData, selectedFile: base64 })\n          }\n        />\n        <Button\n          type=\"submit\"\n          className=\"form__btnSubmit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={clear}\n          className=\"form__btnSubmit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport { Container, Grow, Grid } from \"@material-ui/core\";\nimport Posts from \"../Posts/Posts\";\nimport Form from \"../Form/Form\";\n\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/posts\";\nimport { useEffect, useState } from \"react\";\n\nfunction Home(props) {\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  return (\n    <div>\n      <Grow in>\n        <Container>\n          <Grid\n            className=\"app_postcontainer\"\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {Grid, IconButton, InputAdornment, TextField} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nfunction Input({name, handleChange, label, half, autoFocus, type, handleShowPassword}) {\n    return (\n        <Grid item xs={12} sm={half ? 6 : 12}>\n            <TextField\n                name={name}\n                onChange={handleChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                label={label}\n                autoFocus={autoFocus}\n                type={type}\n                InputProps={name === 'password' ? {\n                    endAdornment: (\n                        <InputAdornment position= \"end\">\n                            <IconButton onClick={handleShowPassword}>\n                                {type === 'password' ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                } : null}\n            />\n        </Grid>\n    );\n}\n\nexport default Input;","import React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;","import React, { useState } from \"react\";\nimport \"./Auth.css\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport { GoogleLogin } from \"react-google-login\";\nimport Input from \"./Input\";\nimport Icon from \"./icon\";\nimport { useDispatch } from \"react-redux\";\nimport { googleLogin, signin, signup } from \"../../actions/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nfunction Auth(props) {\n  const [isSignUp, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleShowPassword = () =>\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup((prevIsSignUp) => !prevIsSignUp);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async (response) => {\n    const result = response?.profileObj;\n    const token = response?.tokenId;\n\n    try {\n      dispatch(googleLogin(result, token));\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"346266285649-cp45qf5d9jflfeb123gt9d9km57huf5j.apps.googleusercontent.com\",\n          scope: \"email\",\n          pluginName: \"GoogleLogin\",\n        })\n        .then(() => {\n          const auth = window.gapi.auth2.getAuthInstance();\n          auth.isSignedIn.get();\n          // this.auth = window.gapi.auth2.getAuthInstance();\n          // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n        });\n    });\n  }, []);\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was Unsuccessful. Try Again Later\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className=\"auth__paper\">\n        <Avatar className=\"auth__avatar\">\n          <LockOpenOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignUp && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"auth__formbutton\"\n          >\n            {isSignUp ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n\n          <GoogleLogin\n            clientId=\"346266285649-cp45qf5d9jflfeb123gt9d9km57huf5j.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className=\"auth__googlebtn\"\n                color=\"secondary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </form>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Button onClick={switchMode}>\n              {isSignUp\n                ? \"Alrady have an account? Sign In\"\n                : \"Don't have an account? Sign Up\"}\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Auth;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Home from \"./components/Home/Home\";\nimport Auth from \"./components/Auth/Auth\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Container maxWidth=\"lg\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/auth\" exact component={Auth} />\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport posts from './posts';\nimport auth from './auth';\n\nexport default combineReducers({\n    posts,\n    auth\n})","import {CREATE_POST, FETCH_ALL, UPDATE_POST, DELETE_POST, LIKE_POST} from '../actions/actionTypes';\n\nexport default function posts(posts= [], action) {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.data;\n        case CREATE_POST:\n            return [...posts, action.data];\n        case UPDATE_POST:\n            return posts.map((post) => post._id === action.data._id ? action.data : post)\n        case DELETE_POST:\n            return posts.filter((post) => post._id !== action.id)\n        case LIKE_POST:\n            return posts.map((post) => post._id === action.data._id ? action.data : post)\n        default:\n            return posts;\n    }\n}","import {AUTH, LOGOUT} from '../actions/actionTypes';\n\nexport default function authReducer(state= {authData: null}, action) {\n    switch (action.type) {\n        case AUTH:\n            localStorage.setItem('profile', JSON.stringify({...action.data}))\n            return {...state, authData: action.data};\n        case LOGOUT:\n            localStorage.clear();\n            return {...state, authData: null};\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './Store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nlet store;\n\nexport function configureStore () {\n    store = createStore(reducer, applyMiddleware(thunk));\n    return store;\n}"],"sourceRoot":""}