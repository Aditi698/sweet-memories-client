{"version":3,"sources":["components/Images/memories.png","actions/actionTypes.js","api/index.js","actions/auth.js","components/Navbar/Navbar.js","actions/posts.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Form/Form.js","components/Home/Home.js","components/Auth/Input.js","components/Auth/icon.js","components/Auth/Auth.js","App.js","reducers/index.js","reducers/posts.js","reducers/auth.js","index.js","Store/index.js"],"names":["FETCH_ALL","CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","AUTH","LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","signIn","formData","post","signUp","updatePost","id","updatedPost","deletepost","delete","likePost","signingInUser","data","type","signingUpUser","Navbar","props","useState","user","setUser","dispatch","useDispatch","history","useHistory","location","useLocation","logout","push","useEffect","decode","exp","Date","getTime","AppBar","className","position","color","to","src","memories","alt","Toolbar","Avatar","result","name","imageUrl","charAt","Typography","variant","Button","onClick","fetchall","creatingPost","updatingPost","deletingPost","likingPost","Post","setCurrentId","Likes","likes","length","find","like","googleId","_id","fontSize","Card","CardMedia","image","selectedFile","title","moment","createdAt","fromNow","creator","style","size","tags","map","tag","CardContent","gutterBottom","component","message","CardActions","disabled","a","api","console","log","Posts","posts","useSelector","state","Grid","container","alignItems","spacing","item","xs","sm","CircularProgress","Form","currentId","postData","setPostData","pst","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","align","Home","get","Grow","in","Container","justify","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","icon","width","height","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","isSignUp","setIsSignup","showPassword","setShowPassword","setFormData","maxWidth","signup","signin","prevShowPassword","clientId","render","renderProps","startIcon","onSuccess","response","profileObj","tokenId","googleLogin","error","onFailure","dd","cookiePolicy","prevIsSignUp","App","path","exact","combineReducers","action","filter","auth","authData","setItem","stringify","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c97f29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.e3b31bf6.png\";","// POSTS\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const CREATE_POST = 'CREATE_POST';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const LIKE_POST = 'LIKE_POST';\n\n\nexport const AUTH = \"AUTH\";\nexport const LOGOUT = \"LOGOUT\";","import axios from 'axios';\n\nconst API = axios.create({baseURL: 'https://sweet-memories-node-v1.herokuapp.com'});\n\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem('profile')) {\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`\n    }\n\n    return req;\n})\n\n// const APIUrls = {\n//     signinURL: `${API_ROOT}/user/signin`,\n//     signupURL: `${API_ROOT}/user/signup`,\n\n//     fetchPostsURL: `${API_ROOT}/posts/getposts`,\n//     createPostsURL: `${API_ROOT}/posts/createpost`,\n//     updatePostURL: `${API_ROOT}/posts/updatepost`,\n//     deletePostURL: `${API_ROOT}/posts/deletepost`,\n//     likePostURL: `${API_ROOT}/posts/likepost`,\n\n// }\n\n// const APIUrls = {\n//     fetchPostsURL: () => \"http://localhost:5000/posts/getposts\",\n//     createPostsURL: () => \"http://localhost:5000/posts/createpost\",\n//     updatePostURL: () => \"http://localhost:5000/posts/updatepost/\",\n// }\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n\nexport const fetchPosts = () => API.get('/posts/getposts');\nexport const createPost = (newPost) => API.post('/posts/createpost', newPost);\nexport const updatePost = (id, updatedPost) => API.post(`/posts/updatepost/${id}`, updatedPost);\nexport const deletepost = (id) => API.delete(`/posts/deletepost/${id}`);\nexport const likePost = (id) => API.post(`/posts/likepost/${id}`);\n","import {AUTH, LOGOUT} from './actionTypes';\nimport * as api from '../api';\n\n\nexport function googleLogin(result, token) {\n    return {\n        type: AUTH,\n        data: {result, token}\n    }\n}\n\nexport function logoutUser() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport const signin = (formData, history) => async (dispatch) => {\n    try {\n        const {data} = await api.signIn(formData);\n\n        dispatch(signingInUser(data));\n\n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function signingInUser(data) {\n    return {\n        type: AUTH,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const signup = (formData, history) => async (dispatch) => {\n    try {\n        const {data} = await api.signUp(formData);\n\n        dispatch(signingUpUser(data));\n\n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function signingUpUser(data) {\n    return {\n        type: AUTH,\n        data\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { AppBar, Avatar, Button, Toolbar, Typography} from '@material-ui/core';\nimport {Link, useHistory, useLocation} from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport './Navbar.css';\n\nimport memories from '../Images/memories.png';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../../actions/auth';\n\nfunction Navbar(props) {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation()\n    \n    const logout = () => {\n        dispatch(logoutUser())\n        history.push('/');\n\n        setUser(null);\n    }\n\n    useEffect(()=> {\n        const token = user?.token;\n\n        if (token) {\n            const decodedToken = decode(token);\n\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n        }\n\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location])\n\n    return (\n        <AppBar className=\"navbar\" position=\"static\" color=\"inherit\">\n            {/* <Typography className=\"app__appbarHeading\" align=\"center\" variant=\"h2\">Memories</Typography> */}\n            <div className=\"navbar__logocontainer\">\n                {/* <MoreHorizIcon /> */}\n                <Link to=\"/\"> <img className=\"navbar__appbarLogo\" src={memories} alt=\"memories\" /> </Link>\n                {/* <MoreHorizIcon /> */}\n            </div>\n            <Toolbar className=\"navbar__toolbar\">\n                {\n                    user ? (\n                        <div className=\"navbar__toolbarProfile\">\n                            <Avatar className=\"navbar__avatar\" alt={user.result.name} src={user.result.imageUrl}>\n                                {user.result.name.charAt(0)}\n                            </Avatar>\n                            <Typography className=\"navbar__username\" variant=\"h6\">{user.result.name}</Typography>\n                            <Button variant=\"contained\" className=\"navbar__logout\" color=\"secondary\" onClick={logout}>Logout</Button>\n                        </div>\n                    ) : (\n                        <Link to=\"/auth\"><Button variant=\"contained\" className=\"navbar__signin\" color=\"primary\">Sign in</Button></Link>\n                    )\n                }\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Navbar;","import {FETCH_ALL, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST} from './actionTypes';\nimport * as api from '../api';\n\nexport const getPosts= () => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts(); // from reaponse we extract data\n        dispatch(fetchall(data));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function fetchall(data) {\n    return {\n        type: FETCH_ALL,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\nexport const createPost= (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post); // from reaponse we extract data\n        dispatch(creatingPost(data));\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function creatingPost(data) {\n    return {\n        type: CREATE_POST,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        console.log(post);\n        const {data} = await api.updatePost(id, post);\n\n        dispatch(updatingPost(data))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport function updatingPost(data) {\n    return {\n        type: UPDATE_POST,\n        data\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletepost(id);\n\n        dispatch(deletingPost(id))\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function deletingPost(id) {\n    return {\n        type: DELETE_POST,\n        id\n    }\n}\n\n// ----------------------------------------------------------------------------------------------------\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const {data} = await api.likePost(id);\n\n        dispatch(likingPost(data))\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport function likingPost(data) {\n    return {\n        type: LIKE_POST,\n        data\n    }\n}","import React from 'react';\nimport moment from 'moment';\nimport './Post.css';\nimport {Card, CardActions , CardContent, CardMedia, Button, Typography} from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {useDispatch} from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts';\n\n\nfunction Post({post, setCurrentId}) {\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    const Likes =  () => {\n        if (post.likes.length > 0) {\n            return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n                ? (\n                    <> <ThumbUpAltIcon color=\"primary\"  fontSize=\"small\" />&nbsp;{post.likes.length> 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`} </> \n                ) : (\n                    <><ThumbUpAltOutlinedIcon fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n                );\n        }\n        return <><ThumbUpAltOutlinedIcon fontSize=\"small\" />&nbsp;Like</>\n    }\n\n    return (\n        <Card className=\"card\">\n            <CardMedia className=\"card__media\" image={post.selectedFile} title={post.title} />\n            <div className=\"card__overlay1\">\n                <Typography variant=\"h6\">{post.name}</Typography>\n                <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n                <div className=\"card__overlay2\">\n                    <Button style={{color: 'white'}} size=\"small\" onClick={()=> setCurrentId(post._id)}>\n                        <MoreHorizIcon fontSize=\"default\" />\n                    </Button>\n                </div>\n            )}\n            <div className=\"card__details\">\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            </div>\n            <CardContent>\n                <Typography className=\"card__message\" variant=\"h6\" gutterBottom>{post.title}</Typography>\n                <Typography className=\"card__message\" color=\"textSecondary\" component=\"p\" variant=\"body2\" gutterBottom>{post.message}</Typography>\n            </CardContent>\n            <CardActions className=\"card__Actions\">\n                <Button size=\"small\" disabled={!user?.result}  onClick={()=> dispatch(likePost(post._id))}>\n                    <Likes />\n                </Button>\n\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n                    <Button size=\"small\"  onClick={()=> dispatch(deletePost(post._id))}>\n                        <DeleteIcon color=\"secondary\" fontSize=\"small\" />\n                        &nbsp; Delete\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport './Posts.css';\nimport {useSelector} from 'react-redux';\nimport {Grid, CircularProgress} from '@material-ui/core';\nimport Post from './Post/Post';\n\nfunction Posts({setCurrentId}) {\n    const posts = useSelector((state) => state.posts);\n    console.log(\"POSTS\",posts);\n    \n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid className=\"posts__container\" container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={6}>\n                        <Post post={post} setCurrentId={setCurrentId} />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    );\n}\nexport default Posts;","import React, { useState, useEffect } from 'react';\nimport {TextField, Button, Paper, Typography} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport './Form.css';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\n\nfunction Form({currentId, setCurrentId}) {\n    const [postData, setPostData] = useState({\n        // creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n    const dispatch = useDispatch();\n    const post = useSelector((state) => currentId ? state.posts.find((pst) => pst._id === currentId) : null);\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    useEffect(() => {\n        // populate form while updating\n        if (post) {\n            setPostData(post);\n        }\n    }, [post]);\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(currentId)\n        if (currentId) {\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name }))  // if we have id then we are updating post\n        } else {\n            dispatch(createPost({...postData, name: user?.result?.name }))  // else we are creating post\n        }\n        clear();\n    }\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({\n            // creator: '',\n            title: '',\n            message: '',\n            tags: '',\n            selectedFile: ''\n        })\n    }\n\n    if (!user?.result?.name) {\n        return (\n            <Paper className=\"form__paper\">\n                <Typography variant=\"h6\" align=\"center\">\n                    Please login to create Memories!\n                </Typography>\n            </Paper>\n        )\n    }\n    return (\n        <Paper className=\"form__paper\">\n            <h4 className=\"form__heading\">{currentId ? 'Editing' : 'Creating'} Memory</h4>\n            <form autoComplete=\"off\" noValidate  onSubmit={handleSubmit}>\n                {/* <TextField \n                    name=\"creator\" \n                    variant=\"outlined\" \n                    label=\"Creator\" \n                    fullWidth \n                    value={postData.creator} \n                    onChange={(e) => setPostData({...postData, creator: e.target.value})} \n                /> */}\n                <TextField \n                    name=\"title\" \n                    variant=\"outlined\" \n                    label=\"Title\" \n                    fullWidth \n                    value={postData.title} \n                    onChange={(e) => setPostData({...postData, title: e.target.value})} \n                />\n                <TextField \n                    name=\"message\" \n                    variant=\"outlined\" \n                    label=\"Message\" \n                    fullWidth \n                    value={postData.message} \n                    onChange={(e) => setPostData({...postData, message: e.target.value})} \n                />\n                <TextField \n                    name=\"tags\" \n                    variant=\"outlined\" \n                    label=\"Tags\" \n                    fullWidth \n                    value={postData.tags} \n                    onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')})} \n                />\n                {/* <div className=\"form__fileInput\"> */}\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                    />\n                {/* </div> */}\n                <Button \n                    type=\"submit\" \n                    className=\"form__btnSubmit\" \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"large\">\n                        Submit\n                </Button>\n                <Button \n                    onClick={clear} \n                    className=\"form__btnSubmit\" \n                    variant=\"contained\" \n                    color=\"secondary\" \n                    size=\"small\">\n                        Clear\n                </Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport {Container, Grow, Grid} from '@material-ui/core';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\n\nimport {useDispatch} from 'react-redux';\nimport {getPosts} from '../../actions/posts';\nimport { useEffect, useState } from 'react';\n\nfunction Home(props) {\n    const [currentId, setCurrentId] = useState(null);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(getPosts());\n    }, [currentId, dispatch]);\n    return (\n        <div>\n            <Grow in>\n                <Container>\n                <Grid className=\"app_postcontainer\" container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                    <Grid item xs={12} sm={7}>\n                    <Posts setCurrentId={setCurrentId} />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                    <Form currentId={currentId} setCurrentId={setCurrentId} />\n                    </Grid>\n                </Grid>\n                </Container>\n          </Grow>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Grid, IconButton, InputAdornment, TextField} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nfunction Input({name, handleChange, label, half, autoFocus, type, handleShowPassword}) {\n    return (\n        <Grid item xs={12} sm={half ? 6 : 12}>\n            <TextField\n                name={name}\n                onChange={handleChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                label={label}\n                autoFocus={autoFocus}\n                type={type}\n                InputProps={name === 'password' ? {\n                    endAdornment: (\n                        <InputAdornment position= \"end\">\n                            <IconButton onClick={handleShowPassword}>\n                                {type === 'password' ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                } : null}\n            />\n        </Grid>\n    );\n}\n\nexport default Input;","import React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;","import React, { useState } from \"react\";\nimport \"./Auth.css\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n  TextField,\n} from \"@material-ui/core\";\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport { GoogleLogin } from \"react-google-login\";\nimport Input from \"./Input\";\nimport Icon from \"./icon\";\nimport { useDispatch } from \"react-redux\";\nimport { googleLogin, signin, signup } from \"../../actions/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nfunction Auth(props) {\n  const [isSignUp, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleShowPassword = () =>\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup((prevIsSignUp) => !prevIsSignUp);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = (response) => {\n    const result = response?.profileObj;\n    const token = response?.tokenId;\n\n    try {\n      dispatch(googleLogin(result, token));\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = (dd) => {\n    console.log(\"Google Sign In was Unsuccessful. Try Again Later\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className=\"auth__paper\">\n        <Avatar className=\"auth__avatar\">\n          <LockOpenOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignUp && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"auth__formbutton\"\n          >\n            {isSignUp ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n\n          <GoogleLogin\n            clientId=\"346266285649-k7uis0i0d7g4o2m742am6mplo3iidouc.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className=\"auth__googlebtn\"\n                color=\"secondary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </form>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Button onClick={switchMode}>\n              {isSignUp\n                ? \"Alrady have an account? Sign In\"\n                : \"Don't have an account? Sign Up\"}\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Auth;\n","import './App.css';\nimport {BrowserRouter as Router, Link, Route, Switch, Redirect} from 'react-router-dom';\nimport {Container} from '@material-ui/core';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Container maxWidth=\"lg\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/auth\" exact component={Auth} />\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport posts from './posts';\nimport auth from './auth';\n\nexport default combineReducers({\n    posts,\n    auth\n})","import {CREATE_POST, FETCH_ALL, UPDATE_POST, DELETE_POST, LIKE_POST} from '../actions/actionTypes';\n\nexport default function posts(posts= [], action) {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.data;\n        case CREATE_POST:\n            return [...posts, action.data];\n        case UPDATE_POST:\n            return posts.map((post) => post._id === action.data._id ? action.data : post)\n        case DELETE_POST:\n            return posts.filter((post) => post._id !== action.id)\n        case LIKE_POST:\n            return posts.map((post) => post._id === action.data._id ? action.data : post)\n        default:\n            return posts;\n    }\n}","import {AUTH, LOGOUT} from '../actions/actionTypes';\n\nexport default function authReducer(state= {authData: null}, action) {\n    switch (action.type) {\n        case AUTH:\n            localStorage.setItem('profile', JSON.stringify({...action.data}))\n            return {...state, authData: action.data};\n        case LOGOUT:\n            localStorage.clear();\n            return {...state, authData: null};\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './Store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nlet store;\n\nexport function configureStore () {\n    store = createStore(reducer, applyMiddleware(thunk));\n    return store;\n}"],"sourceRoot":""}